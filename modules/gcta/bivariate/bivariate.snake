#!/bin/env python

sys.path.insert(1, sys.path[0] + '/../../../library')
from md import process_list

#####SYSTEME PARAMS######
pfix = config["pfix_bivariate"]
outfolder = config['--outfolder']

########USER PARAMS##################
grm = config["--grm"]
nocov = config["--reml-bivar-nocove"]
hypo = config["--reml-bivar-lrt-rg"]
preval = config["--reml-bivar-prevalence"]

#################WILDCARD##########
pheno = config["--pheno"]
pheno = process_list(pheno)
cov = config["--cov"]
#wcard = f"{outfolder}/._infiles/{{pheno}}"
outfile = f"{pfix}_{{pheno}}.hsq"
outfile_base = f"{pfix}_{{pheno}}"

############SOFTWARE##########

rule gcta_bivariate_all:
    input: expand(outfile, pheno = pheno)

rule gcta_bivariate_one:
    input: a = f"{grm}.grm.bin", b = f"{grm}.grm.id",c = f"{grm}.grm.N.bin", d =  lambda wildcards: pheno[wildcards.pheno][0]
    output: outfile
    params: a = outfile_base
    run:
        shell("gcta64 --reml-bivar  --grm {grm} --pheno {{input.d}} --out {{params.a}} --thread-num 8 {nocov} {hypo} {preval} {cov}"
              .format(grm = grm,
                      outfile_base = outfile_base,
                      nocov = "--reml-bivar-nocove" if nocov  else "",
                      hypo = "--reml-bivar-lrt-rg " + hypo if hypo is not None else "",
                      preval = "--reml-bivar-prevalence " + preval if preval is not None else "",
                      cov = "--covar " + cov if cov is not None else ""))
