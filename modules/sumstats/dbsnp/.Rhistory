setwd("/home/veera/FaeroeExomePD/faststorage/fusion_adhd")
sumstatfile <- "sample.summary"
head(sumstat)
dim(sumstat)
head(sumstat)
dim(withids)
dim(withoutids)
a = c(1,2,NA,4,5)
b = c(1,2,3,4,5)
updateids(a,b)
ab = data.frame(a,b)
ab
apply(ab,1,updateids)
apply(ab,2,function(x) updateids(x[1],x[2]))
apply(ab,1,function(x) updateids(x[1],x[2]))
getwd()
setwd("v")
setwd("/home/veera/FaeroeExomePD/faststorage/fusion_adhd/genie_dbsnp/out5")
sumstatfile <- "../../sample.summary"
pfix <- "out5_sample.summary"
head(m2)
data.frame(names(m2))
head(m2)
head(m2)
head(m2[!is.na(avsnp147.y)])
head(m2[!is.na(avsnp147.y),])
dim(m2)
head (sumstat)
head(anno1)
head(f1)
head(f2)
head(m1)
head(f1)
head(m2)
m2[SNP == "chr16:60012677",]
head(m2)
data.frame(names(m2$))
data.frame(names(m2))
table(is.na(m2$avsnp147.x))
table(is.na(m2$avsnp147.y))
head(m2)
head(m2[! is.na(avsnp147.x)])
table(is.na(m2$avsnp147.x))
dim(sumstat)
sim(m2)
dim(m2)
table(duplicated(m2$avsnp147.x))
table(duplicated(m2$SNP))
head(m2[m2$avsnp147.x %in% duplicated(m2$avsnp147.x)])
head(m2[duplicated(m2$avsnp147.x)])
m2[SNPnew == "rs79643588",]
m2a <- m2[! is.na(avsnp147.x)]
dim(m2a)
head(m2a)
table(duplicated(m2$avsnp147.x))
table(duplicated(m2a$avsnp147.x))
head(m2a[duplicated(avsnp147.x)])
m2[SNPnew == "rs200253009"]
sumstat[SNP == "chr8:104032500"]
f1 [SNP == "chr8:104032500"]
f1 [SNP == "chr8:104032500"]
m2a <- m2[!is.na(avsnp147.x)]
table(duplicated(m2a$avsnp147.x))
m2a[duplicated(avsnp147.x)]
m2a[duplicated(SNP)]
table(duplicated(m2a$SNP))
m2a[SNPnew == "rs200253009"]
dim(m2a)
ls()
head(m2)
table(is.na(m2$avsnp147.x))
head(m2[! is.na(avsnp147.x)])
head(sumstat)
head(m2)
dim(sumstat)
dim(m2)
m2$SNP = m2$SNPnew
head(m2)
table(is.na(m2$SNP))
data.frame(table(names(m2)))
data.frame(table(names(sumstat)))
names(m2)
names(sumstat)
names(sumstat)[19]
m2 <- m2[,1:19]
head(m2)
library(random)
library(rpy2)
print(.libPaths()))
print(.libPaths())
library(caret)
?writeLines
?write
sink
?sink
setwd("/home/veera/faststorage/pipelines/temp/htest/genie_prsice/all_scores")
scorefile <- "all_scores_TOY_BASE_GWAS.assoc_SCORES_AT_ALL_THRESHOLDS.txt"
phenofile <- "../../TOY_TARGET_QUANTITATIVE.pheno"
covarfile <- NA
covarfile <- "../../plink.eigenvec"
head(prs)
names(prs)
prs[,1:2]
fam <- fread("../../TOY_TARGET_DATA.fam")
head(fam)
pheno <- fam[,c(1,2,6),with=F]
head(pheno)
head(covar)
covar <- covar[,1:6]
head(covar)
covarfile
covariables
library(plyr)
head(pheno)
head(covar)
head(m2)
head(m1)
head(prs)
prs[,ยง:3]
prs[,1:3]
prs$FID <- prs$IID
prs[,1:3]
head(m2)
f
head(pheno)
temp = table(pheno$pheno1)
temp
temp$1
names(temp)
grepl("2",)
head(pheno)
 res
res
summary(res)
temp = summary(res)
names(summary(res))
temp = summary(res)$coefficients
temp
temp[2,ncol(temp)]
head(dfm)
summary(res)
summary(mdl)
names(summary(mdl))
library(fmsb)
NagelkerkeR2(mdl)
warnings()
head(dfm)
head(dfm)
head(dfm)
head(dfm)
dfmlist[[1]]
head(dfm)
max(dfm$R2)
range(dfm$R2)
table(dfm$R2 == "Inf")
table(dfm$R2 == Inf)
dfm
dim(dfm)
max(dfm$R2)
str(dfm)
class(dfm$R2)
head(dfm)
dfm$R2 <- as.numeric(dfm$R2)
max(dfm$R2)
dfm
dfml
dfm
class(dfm)
dfm <- as.data.frame(dfm)
dfm
range(dfm$R2)
max(dfm$R2)
str(dfm)
dfm$R2 <- as.numeric(dfm$R2)
str(dfm)
max(dfm$R2)
min(dfm$R2)
dfm
install.packages("tidyverse")
install.packages("rvest")
install.packages("xml2")
library(tidyverse)
.libPaths()
?.libPaths
.libPaths("/home/veera/.conda/envs/genie/lib/R/library")
library(tidyverse)
dfm
mdl
summary(mdl)
summary(mdl)$coefficients
temp = summary(mdl)$coefficients
rownames(temp)
temp1 <- as.data.frame(temp)
temp1
row.names(temp)
row.names(temp)[2]
dfm
dfml
dfm
best_threshold
best_threshold
head(m1[,best_threshold])
head(m1)
names(m1)
names(m1) %in% best_threshold
best_threshold
names(m1)
names(m1)
head(m1)
best_threshold
class(m2)
head(m2)
names(m2)
best_threshold
head(m2)
head(temp)
dim(temp)
dim(m2)
head(m2)
table(m2$quantile)
?model.matrix
temp = model.matrix(~quantile, data = m2)
head(temp)
temp = model.matrix(~quantile - 1, data = m2)
head(temp)
dd <- data.frame
dd <- data.frame(a = gl(3,4), b = gl(4,1,12)) # balanced 2-way
dd
table(dd$1)
table(dd$a)
table(dd$b)
options("contrasts")
model.matrix(~a+b,dd)
ff <- log(Volume) ~ log(Height) + log(Girth)
ff
utils::str(m <- model.frame(ff, trees))
ff
head(m)
data(iris)
head(iris)
table(iris$Species)
temp = model.matrix( ~ Species - 1, data=iris )
head(temp)
class(m2$quantile)
table(m2$quantile)
m2$quantile <- as.factor(m2$quantile)
table(m2$quantile)
class(m2$quantile)
m2$quantile
temp <- model.matrix(~quantile)
temp <- model.matrix(~quantile, data = m2)
head(temp)
temp <- model.matrix(~quantile-1, data = m2)
head(temp)
table(temp$quantile1)
class(temp)
table(temp[,1])
setwd("/home/veera/FaeroeExomePD/faststorage/fusion_adhd")
table(temp[,1],temp[2])
table(temp[,1],temp[,2])
table(temp[,1],temp[,3])
table(temp[,3],temp[,3])
table(temp[,2],temp[,3])
dim(temp)
temp <- as.data.frame(temp)
temp <- cbind(temp,m2)
head(temp)
with(temp,table(quantile,quantile1))
with(temp,table(quantile,quantile2))
dd <- data.frame(a = gl(3,4), b = gl(4,1,12)) # balanced 2-way
dd
options("contrasts")
model.matrix(~ a + b, dd)
head(m2)
m2[1:10,1:10]
temp[1:10,1:10]
q2 <- temp[temp$quantile2 == 1,]
with(q2, table(quantile))
with(q2, table(quantile))
model.matrix(~ a + b, dd, contrasts = list(a = "contr.sum"))
dd
temp = model.matrix(~quantile, data = m2)
head(temp)
table(temp[,2])
head(m2)
temp = with(m2, m2[quantile1 == 1 | quantile == 1])
temp = with(m2, m2[quantile1 == 1 | quantile == 1,])
head(temp)
table(temp$quantile)
table(temp$quantile1)
table(temp$quantile2)
table(temp$quantile1
table(temp$quantil1
table(temp$quantile)
temp = with(m2, m2[quantile1 == 1 | quantile2 == 1,])
table(temp$quantile)
table(temp$quantile1)
table(temp$quantile2)
table(m2$quantile)
temp = with(m2, m2[quantile1 == 1 | quantile2 == 1,])
mdl <- glm(pheno1~quantile,data = temp)
mdl
exp(coef(mdl))
exp(confint(mdl))
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
                                      #p
                                      #p
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
qspecor(m2,"quantile2")
mdl <- qspecor(m2,"quantile2")
mdl
or <- exp(coef(mdl))
or
or <- exp(coef(mdl))[2]
or
class(or)
ci
class(ci)
c(or,ci)
qspecor(m2,"quantile2")
qspecor(m2,"quantile2","q1")
qspecor(m2,"quantile2","q1")
qspecor(m2,"quantile2","q1")
qspecor(m2,"quantile2")
ordfm
ordfm
q1
ordfm
dim(ordfm)
ordfm[1,]
ordfm
ordfm
ordfm
ordfm
ordfm
ordfm
as.data.frame(ordfm)
ordfm
ordfm
ordfm
ordfm
ordfm
ordfm
ordfm
ordfm
str(ordfm)
as.numeric(as.character(ordfm$quantileother))
ordfm
ordfm
library(ggplot2)
?geom_errorbar
ordfm
ordfm
ordfm
ordfm$quantile
?releve;
?relevel
head(dfm)
p1
str(dfm)
?geom_text
dfm_best
install.packages("ggrepel")
m2
dim(m2)
head(m2)
dfm
dfm
dfm
dfm
dfm
dfm
dfm
round(0.000001)
round(0.000001, digits = 4)
dfm
dfm
getwd()
head(m2)
getwd()
setwd("~/faststorage/pipelines/temp/htest")
dfm <
dfm <- fread("temp.txt")
head(dfm)
m2 <- dfm
head(qs)
head(qs)
str(m2)
library(ggplot2)
